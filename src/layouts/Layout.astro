---
const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>

	<body class="h-screen w-[30em] m-auto place-content-around flex flex-col items-center justify-start pt-[10%] bg-slate-100 dark:bg-slate-400">
		<slot />
	</body>
</html>

<script is:inline>
    const theme = (() => {
        if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
    })();

    if (theme === "light") {
        document.documentElement.classList.remove("dark");
    } else {
        document.documentElement.classList.add("dark");
    }
    window.localStorage.setItem("theme", theme);
</script>

<style is:global>
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
	@font-face {
		font-family: RobotoMono;
		font-weight: 400;
		src: url('./fonts/RobotoMono/RobotoMono-VariableFont_wght.ttf');
	}
}

@layer components {
	.box {
		@apply border border-gray-300 rounded-md;
	}

	.box.wrap {
		@apply border-none;
	}

	.box.wrap > * {
		@apply rounded-none;
	}

	.box.wrap > *:first-child {
		@apply rounded-l-md;
	}

	.box.wrap > *:last-child {
		@apply rounded-r-md;
	}

}
</style>
